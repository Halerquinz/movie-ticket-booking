// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: movie_service/movie_service.proto

package movie_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeatStatus_Values int32

const (
	SeatStatus_AVAILABLE   SeatStatus_Values = 0
	SeatStatus_UNAVAILABLE SeatStatus_Values = 1
)

// Enum value maps for SeatStatus_Values.
var (
	SeatStatus_Values_name = map[int32]string{
		0: "AVAILABLE",
		1: "UNAVAILABLE",
	}
	SeatStatus_Values_value = map[string]int32{
		"AVAILABLE":   0,
		"UNAVAILABLE": 1,
	}
)

func (x SeatStatus_Values) Enum() *SeatStatus_Values {
	p := new(SeatStatus_Values)
	*p = x
	return p
}

func (x SeatStatus_Values) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeatStatus_Values) Descriptor() protoreflect.EnumDescriptor {
	return file_movie_service_movie_service_proto_enumTypes[0].Descriptor()
}

func (SeatStatus_Values) Type() protoreflect.EnumType {
	return &file_movie_service_movie_service_proto_enumTypes[0]
}

func (x SeatStatus_Values) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeatStatus_Values.Descriptor instead.
func (SeatStatus_Values) EnumDescriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{80, 0}
}

type MovieGenre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *MovieGenre) Reset() {
	*x = MovieGenre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieGenre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieGenre) ProtoMessage() {}

func (x *MovieGenre) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieGenre.ProtoReflect.Descriptor instead.
func (*MovieGenre) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{0}
}

func (x *MovieGenre) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovieGenre) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type MovieType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *MovieType) Reset() {
	*x = MovieType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieType) ProtoMessage() {}

func (x *MovieType) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieType.ProtoReflect.Descriptor instead.
func (*MovieType) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{1}
}

func (x *MovieType) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovieType) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type MovieImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OfMovieId             uint32 `protobuf:"varint,2,opt,name=of_movie_id,json=ofMovieId,proto3" json:"of_movie_id,omitempty"`
	OriginalFileName      string `protobuf:"bytes,3,opt,name=original_file_name,json=originalFileName,proto3" json:"original_file_name,omitempty"`
	OriginalImageFileName string `protobuf:"bytes,4,opt,name=original_image_file_name,json=originalImageFileName,proto3" json:"original_image_file_name,omitempty"`
}

func (x *MovieImage) Reset() {
	*x = MovieImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieImage) ProtoMessage() {}

func (x *MovieImage) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieImage.ProtoReflect.Descriptor instead.
func (*MovieImage) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{2}
}

func (x *MovieImage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovieImage) GetOfMovieId() uint32 {
	if x != nil {
		return x.OfMovieId
	}
	return 0
}

func (x *MovieImage) GetOriginalFileName() string {
	if x != nil {
		return x.OriginalFileName
	}
	return ""
}

func (x *MovieImage) GetOriginalImageFileName() string {
	if x != nil {
		return x.OriginalImageFileName
	}
	return ""
}

type MoviePoster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfMovieId             uint32 `protobuf:"varint,1,opt,name=of_movie_id,json=ofMovieId,proto3" json:"of_movie_id,omitempty"`
	OriginalFileName      string `protobuf:"bytes,2,opt,name=original_file_name,json=originalFileName,proto3" json:"original_file_name,omitempty"`
	OriginalImageFileName string `protobuf:"bytes,3,opt,name=original_image_file_name,json=originalImageFileName,proto3" json:"original_image_file_name,omitempty"`
}

func (x *MoviePoster) Reset() {
	*x = MoviePoster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoviePoster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoviePoster) ProtoMessage() {}

func (x *MoviePoster) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoviePoster.ProtoReflect.Descriptor instead.
func (*MoviePoster) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{3}
}

func (x *MoviePoster) GetOfMovieId() uint32 {
	if x != nil {
		return x.OfMovieId
	}
	return 0
}

func (x *MoviePoster) GetOriginalFileName() string {
	if x != nil {
		return x.OriginalFileName
	}
	return ""
}

func (x *MoviePoster) GetOriginalImageFileName() string {
	if x != nil {
		return x.OriginalImageFileName
	}
	return ""
}

type MovieTrailer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfMovieId      uint32 `protobuf:"varint,1,opt,name=of_movie_id,json=ofMovieId,proto3" json:"of_movie_id,omitempty"`
	YoutubeLinkUrl string `protobuf:"bytes,2,opt,name=youtube_link_url,json=youtubeLinkUrl,proto3" json:"youtube_link_url,omitempty"`
}

func (x *MovieTrailer) Reset() {
	*x = MovieTrailer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieTrailer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieTrailer) ProtoMessage() {}

func (x *MovieTrailer) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieTrailer.ProtoReflect.Descriptor instead.
func (*MovieTrailer) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{4}
}

func (x *MovieTrailer) GetOfMovieId() uint32 {
	if x != nil {
		return x.OfMovieId
	}
	return 0
}

func (x *MovieTrailer) GetYoutubeLinkUrl() string {
	if x != nil {
		return x.YoutubeLinkUrl
	}
	return ""
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Duration    uint32        `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	ReleaseDate uint64        `protobuf:"varint,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Poster      *MoviePoster  `protobuf:"bytes,6,opt,name=poster,proto3" json:"poster,omitempty"`
	Trailer     *MovieTrailer `protobuf:"bytes,7,opt,name=trailer,proto3" json:"trailer,omitempty"`
	MovieType   *MovieType    `protobuf:"bytes,8,opt,name=movie_type,json=movieType,proto3" json:"movie_type,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{5}
}

func (x *Movie) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Movie) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Movie) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Movie) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Movie) GetReleaseDate() uint64 {
	if x != nil {
		return x.ReleaseDate
	}
	return 0
}

func (x *Movie) GetPoster() *MoviePoster {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *Movie) GetTrailer() *MovieTrailer {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *Movie) GetMovieType() *MovieType {
	if x != nil {
		return x.MovieType
	}
	return nil
}

type ShowtimeDayOfTheWeek struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *ShowtimeDayOfTheWeek) Reset() {
	*x = ShowtimeDayOfTheWeek{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowtimeDayOfTheWeek) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowtimeDayOfTheWeek) ProtoMessage() {}

func (x *ShowtimeDayOfTheWeek) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowtimeDayOfTheWeek.ProtoReflect.Descriptor instead.
func (*ShowtimeDayOfTheWeek) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{6}
}

func (x *ShowtimeDayOfTheWeek) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShowtimeDayOfTheWeek) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type ShowtimeSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *ShowtimeSlot) Reset() {
	*x = ShowtimeSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowtimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowtimeSlot) ProtoMessage() {}

func (x *ShowtimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowtimeSlot.ProtoReflect.Descriptor instead.
func (*ShowtimeSlot) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{7}
}

func (x *ShowtimeSlot) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShowtimeSlot) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type Showtime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OfMovieId            uint32                `protobuf:"varint,2,opt,name=of_movie_id,json=ofMovieId,proto3" json:"of_movie_id,omitempty"`
	OfScreenId           uint32                `protobuf:"varint,3,opt,name=of_screen_id,json=ofScreenId,proto3" json:"of_screen_id,omitempty"`
	TimeStart            int64                 `protobuf:"varint,4,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
	TimeEnd              int64                 `protobuf:"varint,5,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`
	ShowtimeSlot         *ShowtimeSlot         `protobuf:"bytes,6,opt,name=showtime_slot,json=showtimeSlot,proto3" json:"showtime_slot,omitempty"`
	ShowtimeDayOfTheWeek *ShowtimeDayOfTheWeek `protobuf:"bytes,7,opt,name=showtime_day_of_the_week,json=showtimeDayOfTheWeek,proto3" json:"showtime_day_of_the_week,omitempty"`
}

func (x *Showtime) Reset() {
	*x = Showtime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Showtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Showtime) ProtoMessage() {}

func (x *Showtime) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Showtime.ProtoReflect.Descriptor instead.
func (*Showtime) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{8}
}

func (x *Showtime) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Showtime) GetOfMovieId() uint32 {
	if x != nil {
		return x.OfMovieId
	}
	return 0
}

func (x *Showtime) GetOfScreenId() uint32 {
	if x != nil {
		return x.OfScreenId
	}
	return 0
}

func (x *Showtime) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *Showtime) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *Showtime) GetShowtimeSlot() *ShowtimeSlot {
	if x != nil {
		return x.ShowtimeSlot
	}
	return nil
}

func (x *Showtime) GetShowtimeDayOfTheWeek() *ShowtimeDayOfTheWeek {
	if x != nil {
		return x.ShowtimeDayOfTheWeek
	}
	return nil
}

type Theater struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Location    string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	ScreenCount uint32 `protobuf:"varint,4,opt,name=screen_count,json=screenCount,proto3" json:"screen_count,omitempty"`
	SeatCount   uint32 `protobuf:"varint,5,opt,name=seat_count,json=seatCount,proto3" json:"seat_count,omitempty"`
}

func (x *Theater) Reset() {
	*x = Theater{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Theater) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Theater) ProtoMessage() {}

func (x *Theater) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Theater.ProtoReflect.Descriptor instead.
func (*Theater) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{9}
}

func (x *Theater) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Theater) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Theater) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Theater) GetScreenCount() uint32 {
	if x != nil {
		return x.ScreenCount
	}
	return 0
}

func (x *Theater) GetSeatCount() uint32 {
	if x != nil {
		return x.SeatCount
	}
	return 0
}

type ScreenType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName    string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SeatCount      uint32 `protobuf:"varint,4,opt,name=seat_count,json=seatCount,proto3" json:"seat_count,omitempty"`
	RowCount       uint32 `protobuf:"varint,5,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	SeatOfRowCount uint32 `protobuf:"varint,6,opt,name=seat_of_row_count,json=seatOfRowCount,proto3" json:"seat_of_row_count,omitempty"`
}

func (x *ScreenType) Reset() {
	*x = ScreenType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenType) ProtoMessage() {}

func (x *ScreenType) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenType.ProtoReflect.Descriptor instead.
func (*ScreenType) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{10}
}

func (x *ScreenType) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScreenType) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ScreenType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScreenType) GetSeatCount() uint32 {
	if x != nil {
		return x.SeatCount
	}
	return 0
}

func (x *ScreenType) GetRowCount() uint32 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *ScreenType) GetSeatOfRowCount() uint32 {
	if x != nil {
		return x.SeatOfRowCount
	}
	return 0
}

type Screen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OfTheaterId uint32      `protobuf:"varint,2,opt,name=of_theater_id,json=ofTheaterId,proto3" json:"of_theater_id,omitempty"`
	ScreenType  *ScreenType `protobuf:"bytes,3,opt,name=screen_type,json=screenType,proto3" json:"screen_type,omitempty"`
	DisplayName string      `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *Screen) Reset() {
	*x = Screen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Screen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Screen) ProtoMessage() {}

func (x *Screen) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Screen.ProtoReflect.Descriptor instead.
func (*Screen) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{11}
}

func (x *Screen) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Screen) GetOfTheaterId() uint32 {
	if x != nil {
		return x.OfTheaterId
	}
	return 0
}

func (x *Screen) GetScreenType() *ScreenType {
	if x != nil {
		return x.ScreenType
	}
	return nil
}

func (x *Screen) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type SeatType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *SeatType) Reset() {
	*x = SeatType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatType) ProtoMessage() {}

func (x *SeatType) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatType.ProtoReflect.Descriptor instead.
func (*SeatType) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{12}
}

func (x *SeatType) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeatType) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type Seat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SeatType   *SeatType `protobuf:"bytes,2,opt,name=seat_type,json=seatType,proto3" json:"seat_type,omitempty"`
	OfScreenId uint32    `protobuf:"varint,3,opt,name=of_screen_id,json=ofScreenId,proto3" json:"of_screen_id,omitempty"`
	Column     uint32    `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"`
	Row        string    `protobuf:"bytes,5,opt,name=row,proto3" json:"row,omitempty"`
	No         string    `protobuf:"bytes,6,opt,name=no,proto3" json:"no,omitempty"`
}

func (x *Seat) Reset() {
	*x = Seat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{13}
}

func (x *Seat) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Seat) GetSeatType() *SeatType {
	if x != nil {
		return x.SeatType
	}
	return nil
}

func (x *Seat) GetOfScreenId() uint32 {
	if x != nil {
		return x.OfScreenId
	}
	return 0
}

func (x *Seat) GetColumn() uint32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *Seat) GetRow() string {
	if x != nil {
		return x.Row
	}
	return ""
}

func (x *Seat) GetNo() string {
	if x != nil {
		return x.No
	}
	return ""
}

type CreateMovieGenreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *CreateMovieGenreRequest) Reset() {
	*x = CreateMovieGenreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovieGenreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieGenreRequest) ProtoMessage() {}

func (x *CreateMovieGenreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieGenreRequest.ProtoReflect.Descriptor instead.
func (*CreateMovieGenreRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateMovieGenreRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type CreateMovieGenreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieGenre *MovieGenre `protobuf:"bytes,1,opt,name=movie_genre,json=movieGenre,proto3" json:"movie_genre,omitempty"`
}

func (x *CreateMovieGenreResponse) Reset() {
	*x = CreateMovieGenreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovieGenreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieGenreResponse) ProtoMessage() {}

func (x *CreateMovieGenreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieGenreResponse.ProtoReflect.Descriptor instead.
func (*CreateMovieGenreResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateMovieGenreResponse) GetMovieGenre() *MovieGenre {
	if x != nil {
		return x.MovieGenre
	}
	return nil
}

type UpdateMovieGenreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *UpdateMovieGenreRequest) Reset() {
	*x = UpdateMovieGenreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieGenreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieGenreRequest) ProtoMessage() {}

func (x *UpdateMovieGenreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieGenreRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieGenreRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateMovieGenreRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMovieGenreRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type UpdateMovieGenreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieGenre *MovieGenre `protobuf:"bytes,1,opt,name=movie_genre,json=movieGenre,proto3" json:"movie_genre,omitempty"`
}

func (x *UpdateMovieGenreResponse) Reset() {
	*x = UpdateMovieGenreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieGenreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieGenreResponse) ProtoMessage() {}

func (x *UpdateMovieGenreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieGenreResponse.ProtoReflect.Descriptor instead.
func (*UpdateMovieGenreResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateMovieGenreResponse) GetMovieGenre() *MovieGenre {
	if x != nil {
		return x.MovieGenre
	}
	return nil
}

type DeleteMovieGenreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMovieGenreRequest) Reset() {
	*x = DeleteMovieGenreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieGenreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieGenreRequest) ProtoMessage() {}

func (x *DeleteMovieGenreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieGenreRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieGenreRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteMovieGenreRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMovieGenreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMovieGenreResponse) Reset() {
	*x = DeleteMovieGenreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieGenreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieGenreResponse) ProtoMessage() {}

func (x *DeleteMovieGenreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieGenreResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovieGenreResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{19}
}

type GetShowtimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowtimeId uint32 `protobuf:"varint,1,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
}

func (x *GetShowtimeRequest) Reset() {
	*x = GetShowtimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeRequest) ProtoMessage() {}

func (x *GetShowtimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeRequest.ProtoReflect.Descriptor instead.
func (*GetShowtimeRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetShowtimeRequest) GetShowtimeId() uint32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

type GetShowtimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Showtime *Showtime `protobuf:"bytes,1,opt,name=showtime,proto3" json:"showtime,omitempty"`
}

func (x *GetShowtimeResponse) Reset() {
	*x = GetShowtimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeResponse) ProtoMessage() {}

func (x *GetShowtimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeResponse.ProtoReflect.Descriptor instead.
func (*GetShowtimeResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetShowtimeResponse) GetShowtime() *Showtime {
	if x != nil {
		return x.Showtime
	}
	return nil
}

type CreateImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfMovieId        uint32 `protobuf:"varint,1,opt,name=of_movie_id,json=ofMovieId,proto3" json:"of_movie_id,omitempty"`
	OriginalFileName string `protobuf:"bytes,2,opt,name=original_file_name,json=originalFileName,proto3" json:"original_file_name,omitempty"`
	ImageData        []byte `protobuf:"bytes,3,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
}

func (x *CreateImageRequest) Reset() {
	*x = CreateImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageRequest) ProtoMessage() {}

func (x *CreateImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageRequest.ProtoReflect.Descriptor instead.
func (*CreateImageRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{22}
}

func (x *CreateImageRequest) GetOfMovieId() uint32 {
	if x != nil {
		return x.OfMovieId
	}
	return 0
}

func (x *CreateImageRequest) GetOriginalFileName() string {
	if x != nil {
		return x.OriginalFileName
	}
	return ""
}

func (x *CreateImageRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

type CreateImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieImage *MovieImage `protobuf:"bytes,1,opt,name=movie_image,json=movieImage,proto3" json:"movie_image,omitempty"`
}

func (x *CreateImageResponse) Reset() {
	*x = CreateImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageResponse) ProtoMessage() {}

func (x *CreateImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageResponse.ProtoReflect.Descriptor instead.
func (*CreateImageResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{23}
}

func (x *CreateImageResponse) GetMovieImage() *MovieImage {
	if x != nil {
		return x.MovieImage
	}
	return nil
}

type GetImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *GetImageRequest) Reset() {
	*x = GetImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageRequest) ProtoMessage() {}

func (x *GetImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageRequest.ProtoReflect.Descriptor instead.
func (*GetImageRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetImageRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type GetImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieImageList []*MovieImage `protobuf:"bytes,1,rep,name=movie_image_list,json=movieImageList,proto3" json:"movie_image_list,omitempty"`
}

func (x *GetImageResponse) Reset() {
	*x = GetImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageResponse) ProtoMessage() {}

func (x *GetImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageResponse.ProtoReflect.Descriptor instead.
func (*GetImageResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetImageResponse) GetMovieImageList() []*MovieImage {
	if x != nil {
		return x.MovieImageList
	}
	return nil
}

type DeleteImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteImageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteImageResponse) Reset() {
	*x = DeleteImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResponse) ProtoMessage() {}

func (x *DeleteImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResponse.ProtoReflect.Descriptor instead.
func (*DeleteImageResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{27}
}

type CreatePosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfMovieId        uint32 `protobuf:"varint,1,opt,name=of_movie_id,json=ofMovieId,proto3" json:"of_movie_id,omitempty"`
	OriginalFileName string `protobuf:"bytes,2,opt,name=originalFileName,proto3" json:"originalFileName,omitempty"`
	ImageData        []byte `protobuf:"bytes,3,opt,name=imageData,proto3" json:"imageData,omitempty"`
}

func (x *CreatePosterRequest) Reset() {
	*x = CreatePosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePosterRequest) ProtoMessage() {}

func (x *CreatePosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePosterRequest.ProtoReflect.Descriptor instead.
func (*CreatePosterRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{28}
}

func (x *CreatePosterRequest) GetOfMovieId() uint32 {
	if x != nil {
		return x.OfMovieId
	}
	return 0
}

func (x *CreatePosterRequest) GetOriginalFileName() string {
	if x != nil {
		return x.OriginalFileName
	}
	return ""
}

func (x *CreatePosterRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

type CreatePosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoviePoster *MoviePoster `protobuf:"bytes,1,opt,name=movie_poster,json=moviePoster,proto3" json:"movie_poster,omitempty"`
}

func (x *CreatePosterResponse) Reset() {
	*x = CreatePosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePosterResponse) ProtoMessage() {}

func (x *CreatePosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePosterResponse.ProtoReflect.Descriptor instead.
func (*CreatePosterResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{29}
}

func (x *CreatePosterResponse) GetMoviePoster() *MoviePoster {
	if x != nil {
		return x.MoviePoster
	}
	return nil
}

type GetPosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *GetPosterRequest) Reset() {
	*x = GetPosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPosterRequest) ProtoMessage() {}

func (x *GetPosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPosterRequest.ProtoReflect.Descriptor instead.
func (*GetPosterRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetPosterRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type GetPosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoviePoster *MoviePoster `protobuf:"bytes,1,opt,name=movie_poster,json=moviePoster,proto3" json:"movie_poster,omitempty"`
}

func (x *GetPosterResponse) Reset() {
	*x = GetPosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPosterResponse) ProtoMessage() {}

func (x *GetPosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPosterResponse.ProtoReflect.Descriptor instead.
func (*GetPosterResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetPosterResponse) GetMoviePoster() *MoviePoster {
	if x != nil {
		return x.MoviePoster
	}
	return nil
}

type DeletePosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfMovieId uint32 `protobuf:"varint,1,opt,name=of_movie_id,json=ofMovieId,proto3" json:"of_movie_id,omitempty"`
}

func (x *DeletePosterRequest) Reset() {
	*x = DeletePosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePosterRequest) ProtoMessage() {}

func (x *DeletePosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePosterRequest.ProtoReflect.Descriptor instead.
func (*DeletePosterRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{32}
}

func (x *DeletePosterRequest) GetOfMovieId() uint32 {
	if x != nil {
		return x.OfMovieId
	}
	return 0
}

type DeletePosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePosterResponse) Reset() {
	*x = DeletePosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePosterResponse) ProtoMessage() {}

func (x *DeletePosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePosterResponse.ProtoReflect.Descriptor instead.
func (*DeletePosterResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{33}
}

type PosterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalFileName string `protobuf:"bytes,1,opt,name=original_file_name,json=originalFileName,proto3" json:"original_file_name,omitempty"`
	ImageData        []byte `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
}

func (x *PosterInfo) Reset() {
	*x = PosterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosterInfo) ProtoMessage() {}

func (x *PosterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosterInfo.ProtoReflect.Descriptor instead.
func (*PosterInfo) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{34}
}

func (x *PosterInfo) GetOriginalFileName() string {
	if x != nil {
		return x.OriginalFileName
	}
	return ""
}

func (x *PosterInfo) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalFileName string `protobuf:"bytes,1,opt,name=original_file_name,json=originalFileName,proto3" json:"original_file_name,omitempty"`
	ImageData        []byte `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{35}
}

func (x *ImageInfo) GetOriginalFileName() string {
	if x != nil {
		return x.OriginalFileName
	}
	return ""
}

func (x *ImageInfo) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

type CreateMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Duration    uint32       `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	ReleaseDate uint64       `protobuf:"varint,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	GenreIdList []uint32     `protobuf:"varint,5,rep,packed,name=genre_id_list,json=genreIdList,proto3" json:"genre_id_list,omitempty"`
	ImageList   []*ImageInfo `protobuf:"bytes,6,rep,name=image_list,json=imageList,proto3" json:"image_list,omitempty"`
	Poster      *PosterInfo  `protobuf:"bytes,7,opt,name=poster,proto3" json:"poster,omitempty"`
	TypeId      uint32       `protobuf:"varint,8,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Trailer     string       `protobuf:"bytes,9,opt,name=trailer,proto3" json:"trailer,omitempty"`
}

func (x *CreateMovieRequest) Reset() {
	*x = CreateMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieRequest) ProtoMessage() {}

func (x *CreateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieRequest.ProtoReflect.Descriptor instead.
func (*CreateMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{36}
}

func (x *CreateMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMovieRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateMovieRequest) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateMovieRequest) GetReleaseDate() uint64 {
	if x != nil {
		return x.ReleaseDate
	}
	return 0
}

func (x *CreateMovieRequest) GetGenreIdList() []uint32 {
	if x != nil {
		return x.GenreIdList
	}
	return nil
}

func (x *CreateMovieRequest) GetImageList() []*ImageInfo {
	if x != nil {
		return x.ImageList
	}
	return nil
}

func (x *CreateMovieRequest) GetPoster() *PosterInfo {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *CreateMovieRequest) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CreateMovieRequest) GetTrailer() string {
	if x != nil {
		return x.Trailer
	}
	return ""
}

type CreateMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movie *Movie `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
}

func (x *CreateMovieResponse) Reset() {
	*x = CreateMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieResponse) ProtoMessage() {}

func (x *CreateMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieResponse.ProtoReflect.Descriptor instead.
func (*CreateMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{37}
}

func (x *CreateMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

type GetMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMovieRequest) Reset() {
	*x = GetMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieRequest) ProtoMessage() {}

func (x *GetMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieRequest.ProtoReflect.Descriptor instead.
func (*GetMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetMovieRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movie     *Movie        `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	GenreList []*MovieGenre `protobuf:"bytes,2,rep,name=genre_list,json=genreList,proto3" json:"genre_list,omitempty"`
	ImageList []*MovieImage `protobuf:"bytes,3,rep,name=image_list,json=imageList,proto3" json:"image_list,omitempty"`
}

func (x *GetMovieResponse) Reset() {
	*x = GetMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieResponse) ProtoMessage() {}

func (x *GetMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieResponse.ProtoReflect.Descriptor instead.
func (*GetMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

func (x *GetMovieResponse) GetGenreList() []*MovieGenre {
	if x != nil {
		return x.GenreList
	}
	return nil
}

func (x *GetMovieResponse) GetImageList() []*MovieImage {
	if x != nil {
		return x.ImageList
	}
	return nil
}

type GetCurrentShowingMovieListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetCurrentShowingMovieListRequest) Reset() {
	*x = GetCurrentShowingMovieListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentShowingMovieListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentShowingMovieListRequest) ProtoMessage() {}

func (x *GetCurrentShowingMovieListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentShowingMovieListRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentShowingMovieListRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{40}
}

func (x *GetCurrentShowingMovieListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCurrentShowingMovieListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCurrentShowingMovieListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieList []*Movie `protobuf:"bytes,1,rep,name=movie_list,json=movieList,proto3" json:"movie_list,omitempty"`
}

func (x *GetCurrentShowingMovieListResponse) Reset() {
	*x = GetCurrentShowingMovieListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentShowingMovieListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentShowingMovieListResponse) ProtoMessage() {}

func (x *GetCurrentShowingMovieListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentShowingMovieListResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentShowingMovieListResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetCurrentShowingMovieListResponse) GetMovieList() []*Movie {
	if x != nil {
		return x.MovieList
	}
	return nil
}

type GetUpcomingMovieListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetUpcomingMovieListRequest) Reset() {
	*x = GetUpcomingMovieListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingMovieListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingMovieListRequest) ProtoMessage() {}

func (x *GetUpcomingMovieListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingMovieListRequest.ProtoReflect.Descriptor instead.
func (*GetUpcomingMovieListRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetUpcomingMovieListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUpcomingMovieListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUpcomingMovieListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieList []*Movie `protobuf:"bytes,1,rep,name=movie_list,json=movieList,proto3" json:"movie_list,omitempty"`
}

func (x *GetUpcomingMovieListResponse) Reset() {
	*x = GetUpcomingMovieListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingMovieListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingMovieListResponse) ProtoMessage() {}

func (x *GetUpcomingMovieListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingMovieListResponse.ProtoReflect.Descriptor instead.
func (*GetUpcomingMovieListResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{43}
}

func (x *GetUpcomingMovieListResponse) GetMovieList() []*Movie {
	if x != nil {
		return x.MovieList
	}
	return nil
}

type DeleteMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMovieRequest) Reset() {
	*x = DeleteMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieRequest) ProtoMessage() {}

func (x *DeleteMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteMovieRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMovieResponse) Reset() {
	*x = DeleteMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieResponse) ProtoMessage() {}

func (x *DeleteMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{45}
}

type CreateScreenTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName    string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description    string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	SeatCount      uint32 `protobuf:"varint,3,opt,name=seat_count,json=seatCount,proto3" json:"seat_count,omitempty"`
	SeatOfRowCount uint32 `protobuf:"varint,4,opt,name=seat_of_row_count,json=seatOfRowCount,proto3" json:"seat_of_row_count,omitempty"`
	RowCount       uint32 `protobuf:"varint,5,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
}

func (x *CreateScreenTypeRequest) Reset() {
	*x = CreateScreenTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScreenTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScreenTypeRequest) ProtoMessage() {}

func (x *CreateScreenTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScreenTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateScreenTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{46}
}

func (x *CreateScreenTypeRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateScreenTypeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateScreenTypeRequest) GetSeatCount() uint32 {
	if x != nil {
		return x.SeatCount
	}
	return 0
}

func (x *CreateScreenTypeRequest) GetSeatOfRowCount() uint32 {
	if x != nil {
		return x.SeatOfRowCount
	}
	return 0
}

func (x *CreateScreenTypeRequest) GetRowCount() uint32 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

type CreateScreenTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypeId   uint32 `protobuf:"varint,1,opt,name=screen_type_id,json=screenTypeId,proto3" json:"screen_type_id,omitempty"`
	DisplayName    string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SeatCount      uint32 `protobuf:"varint,4,opt,name=seat_count,json=seatCount,proto3" json:"seat_count,omitempty"`
	SeatOfRowCount uint32 `protobuf:"varint,5,opt,name=seat_of_row_count,json=seatOfRowCount,proto3" json:"seat_of_row_count,omitempty"`
	RowCount       uint32 `protobuf:"varint,6,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
}

func (x *CreateScreenTypeResponse) Reset() {
	*x = CreateScreenTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScreenTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScreenTypeResponse) ProtoMessage() {}

func (x *CreateScreenTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScreenTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateScreenTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{47}
}

func (x *CreateScreenTypeResponse) GetScreenTypeId() uint32 {
	if x != nil {
		return x.ScreenTypeId
	}
	return 0
}

func (x *CreateScreenTypeResponse) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateScreenTypeResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateScreenTypeResponse) GetSeatCount() uint32 {
	if x != nil {
		return x.SeatCount
	}
	return 0
}

func (x *CreateScreenTypeResponse) GetSeatOfRowCount() uint32 {
	if x != nil {
		return x.SeatOfRowCount
	}
	return 0
}

func (x *CreateScreenTypeResponse) GetRowCount() uint32 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

type DeleteScreenTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteScreenTypeRequest) Reset() {
	*x = DeleteScreenTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeRequest) ProtoMessage() {}

func (x *DeleteScreenTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteScreenTypeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteScreenTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteScreenTypeResponse) Reset() {
	*x = DeleteScreenTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeResponse) ProtoMessage() {}

func (x *DeleteScreenTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{49}
}

type CreateTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Location    string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *CreateTheaterRequest) Reset() {
	*x = CreateTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTheaterRequest) ProtoMessage() {}

func (x *CreateTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTheaterRequest.ProtoReflect.Descriptor instead.
func (*CreateTheaterRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{50}
}

func (x *CreateTheaterRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateTheaterRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type CreateTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId   uint32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Location    string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	ScreenCount uint32 `protobuf:"varint,4,opt,name=screen_count,json=screenCount,proto3" json:"screen_count,omitempty"`
	SeatCount   uint32 `protobuf:"varint,5,opt,name=seat_count,json=seatCount,proto3" json:"seat_count,omitempty"`
}

func (x *CreateTheaterResponse) Reset() {
	*x = CreateTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTheaterResponse) ProtoMessage() {}

func (x *CreateTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTheaterResponse.ProtoReflect.Descriptor instead.
func (*CreateTheaterResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{51}
}

func (x *CreateTheaterResponse) GetTheaterId() uint32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *CreateTheaterResponse) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateTheaterResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateTheaterResponse) GetScreenCount() uint32 {
	if x != nil {
		return x.ScreenCount
	}
	return 0
}

func (x *CreateTheaterResponse) GetSeatCount() uint32 {
	if x != nil {
		return x.SeatCount
	}
	return 0
}

type GetTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId uint32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
}

func (x *GetTheaterRequest) Reset() {
	*x = GetTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterRequest) ProtoMessage() {}

func (x *GetTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetTheaterRequest) GetTheaterId() uint32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

type GetTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater *Theater `protobuf:"bytes,1,opt,name=theater,proto3" json:"theater,omitempty"`
}

func (x *GetTheaterResponse) Reset() {
	*x = GetTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterResponse) ProtoMessage() {}

func (x *GetTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetTheaterResponse) GetTheater() *Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

type GetTheaterListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTheaterListRequest) Reset() {
	*x = GetTheaterListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterListRequest) ProtoMessage() {}

func (x *GetTheaterListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterListRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterListRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{54}
}

type GetTheaterListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterList []*Theater `protobuf:"bytes,1,rep,name=theater_list,json=theaterList,proto3" json:"theater_list,omitempty"`
}

func (x *GetTheaterListResponse) Reset() {
	*x = GetTheaterListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterListResponse) ProtoMessage() {}

func (x *GetTheaterListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterListResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterListResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{55}
}

func (x *GetTheaterListResponse) GetTheaterList() []*Theater {
	if x != nil {
		return x.TheaterList
	}
	return nil
}

type DeleteTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTheaterRequest) Reset() {
	*x = DeleteTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterRequest) ProtoMessage() {}

func (x *DeleteTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteTheaterRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTheaterResponse) Reset() {
	*x = DeleteTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterResponse) ProtoMessage() {}

func (x *DeleteTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{57}
}

type CreateScreenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId    uint32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	ScreenTypeId uint32 `protobuf:"varint,2,opt,name=screen_type_id,json=screenTypeId,proto3" json:"screen_type_id,omitempty"`
	DisplayName  string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *CreateScreenRequest) Reset() {
	*x = CreateScreenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScreenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScreenRequest) ProtoMessage() {}

func (x *CreateScreenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScreenRequest.ProtoReflect.Descriptor instead.
func (*CreateScreenRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{58}
}

func (x *CreateScreenRequest) GetTheaterId() uint32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *CreateScreenRequest) GetScreenTypeId() uint32 {
	if x != nil {
		return x.ScreenTypeId
	}
	return 0
}

func (x *CreateScreenRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type CreateScreenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Screen *Screen `protobuf:"bytes,1,opt,name=screen,proto3" json:"screen,omitempty"`
}

func (x *CreateScreenResponse) Reset() {
	*x = CreateScreenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScreenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScreenResponse) ProtoMessage() {}

func (x *CreateScreenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScreenResponse.ProtoReflect.Descriptor instead.
func (*CreateScreenResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{59}
}

func (x *CreateScreenResponse) GetScreen() *Screen {
	if x != nil {
		return x.Screen
	}
	return nil
}

type GetScreenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenId uint32 `protobuf:"varint,1,opt,name=screen_id,json=screenId,proto3" json:"screen_id,omitempty"`
}

func (x *GetScreenRequest) Reset() {
	*x = GetScreenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenRequest) ProtoMessage() {}

func (x *GetScreenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenRequest.ProtoReflect.Descriptor instead.
func (*GetScreenRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{60}
}

func (x *GetScreenRequest) GetScreenId() uint32 {
	if x != nil {
		return x.ScreenId
	}
	return 0
}

type GetScreenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Screen *Screen `protobuf:"bytes,1,opt,name=screen,proto3" json:"screen,omitempty"`
}

func (x *GetScreenResponse) Reset() {
	*x = GetScreenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenResponse) ProtoMessage() {}

func (x *GetScreenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenResponse.ProtoReflect.Descriptor instead.
func (*GetScreenResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{61}
}

func (x *GetScreenResponse) GetScreen() *Screen {
	if x != nil {
		return x.Screen
	}
	return nil
}

type DeleteScreenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteScreenRequest) Reset() {
	*x = DeleteScreenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenRequest) ProtoMessage() {}

func (x *DeleteScreenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenRequest.ProtoReflect.Descriptor instead.
func (*DeleteScreenRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteScreenRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteScreenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteScreenResponse) Reset() {
	*x = DeleteScreenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenResponse) ProtoMessage() {}

func (x *DeleteScreenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenResponse.ProtoReflect.Descriptor instead.
func (*DeleteScreenResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{63}
}

type GetSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId uint32 `protobuf:"varint,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
}

func (x *GetSeatRequest) Reset() {
	*x = GetSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatRequest) ProtoMessage() {}

func (x *GetSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatRequest.ProtoReflect.Descriptor instead.
func (*GetSeatRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{64}
}

func (x *GetSeatRequest) GetSeatId() uint32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

type GetSeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat *Seat `protobuf:"bytes,1,opt,name=seat,proto3" json:"seat,omitempty"`
}

func (x *GetSeatResponse) Reset() {
	*x = GetSeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatResponse) ProtoMessage() {}

func (x *GetSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatResponse.ProtoReflect.Descriptor instead.
func (*GetSeatResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{65}
}

func (x *GetSeatResponse) GetSeat() *Seat {
	if x != nil {
		return x.Seat
	}
	return nil
}

type CreateAllSeatOfScreenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenId     uint32 `protobuf:"varint,1,opt,name=screen_id,json=screenId,proto3" json:"screen_id,omitempty"`
	ScreenTypeId uint32 `protobuf:"varint,2,opt,name=screen_type_id,json=screenTypeId,proto3" json:"screen_type_id,omitempty"`
}

func (x *CreateAllSeatOfScreenRequest) Reset() {
	*x = CreateAllSeatOfScreenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAllSeatOfScreenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAllSeatOfScreenRequest) ProtoMessage() {}

func (x *CreateAllSeatOfScreenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAllSeatOfScreenRequest.ProtoReflect.Descriptor instead.
func (*CreateAllSeatOfScreenRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{66}
}

func (x *CreateAllSeatOfScreenRequest) GetScreenId() uint32 {
	if x != nil {
		return x.ScreenId
	}
	return 0
}

func (x *CreateAllSeatOfScreenRequest) GetScreenTypeId() uint32 {
	if x != nil {
		return x.ScreenTypeId
	}
	return 0
}

type CreateAllSeatOfScreenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAllSeatOfScreenResponse) Reset() {
	*x = CreateAllSeatOfScreenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAllSeatOfScreenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAllSeatOfScreenResponse) ProtoMessage() {}

func (x *CreateAllSeatOfScreenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAllSeatOfScreenResponse.ProtoReflect.Descriptor instead.
func (*CreateAllSeatOfScreenResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{67}
}

type CreateShowtimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId   uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	ScreenId  uint32 `protobuf:"varint,3,opt,name=screen_id,json=screenId,proto3" json:"screen_id,omitempty"`
	TimeStart int64  `protobuf:"varint,4,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
}

func (x *CreateShowtimeRequest) Reset() {
	*x = CreateShowtimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShowtimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShowtimeRequest) ProtoMessage() {}

func (x *CreateShowtimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShowtimeRequest.ProtoReflect.Descriptor instead.
func (*CreateShowtimeRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{68}
}

func (x *CreateShowtimeRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *CreateShowtimeRequest) GetScreenId() uint32 {
	if x != nil {
		return x.ScreenId
	}
	return 0
}

func (x *CreateShowtimeRequest) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

type CreateShowtimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Showtime *Showtime `protobuf:"bytes,1,opt,name=showtime,proto3" json:"showtime,omitempty"`
}

func (x *CreateShowtimeResponse) Reset() {
	*x = CreateShowtimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShowtimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShowtimeResponse) ProtoMessage() {}

func (x *CreateShowtimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShowtimeResponse.ProtoReflect.Descriptor instead.
func (*CreateShowtimeResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{69}
}

func (x *CreateShowtimeResponse) GetShowtime() *Showtime {
	if x != nil {
		return x.Showtime
	}
	return nil
}

type DeleteShowtimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteShowtimeRequest) Reset() {
	*x = DeleteShowtimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShowtimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShowtimeRequest) ProtoMessage() {}

func (x *DeleteShowtimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShowtimeRequest.ProtoReflect.Descriptor instead.
func (*DeleteShowtimeRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{70}
}

func (x *DeleteShowtimeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteShowtimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteShowtimeResponse) Reset() {
	*x = DeleteShowtimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShowtimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShowtimeResponse) ProtoMessage() {}

func (x *DeleteShowtimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShowtimeResponse.ProtoReflect.Descriptor instead.
func (*DeleteShowtimeResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{71}
}

type GetShowtimeListOfTheaterByMovieIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId   uint32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	MovieId     uint32 `protobuf:"varint,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	RequestTime uint64 `protobuf:"varint,3,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
}

func (x *GetShowtimeListOfTheaterByMovieIdRequest) Reset() {
	*x = GetShowtimeListOfTheaterByMovieIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeListOfTheaterByMovieIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeListOfTheaterByMovieIdRequest) ProtoMessage() {}

func (x *GetShowtimeListOfTheaterByMovieIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeListOfTheaterByMovieIdRequest.ProtoReflect.Descriptor instead.
func (*GetShowtimeListOfTheaterByMovieIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{72}
}

func (x *GetShowtimeListOfTheaterByMovieIdRequest) GetTheaterId() uint32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *GetShowtimeListOfTheaterByMovieIdRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *GetShowtimeListOfTheaterByMovieIdRequest) GetRequestTime() uint64 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

type ShowtimeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TheaterName string     `protobuf:"bytes,2,opt,name=theater_name,json=theaterName,proto3" json:"theater_name,omitempty"`
	MovieName   string     `protobuf:"bytes,3,opt,name=movie_name,json=movieName,proto3" json:"movie_name,omitempty"`
	MovieType   *MovieType `protobuf:"bytes,4,opt,name=movie_type,json=movieType,proto3" json:"movie_type,omitempty"`
	ScreenName  string     `protobuf:"bytes,5,opt,name=screen_name,json=screenName,proto3" json:"screen_name,omitempty"`
	TimeStart   int64      `protobuf:"varint,6,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
	TimeEnd     int64      `protobuf:"varint,7,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`
	SeatCount   uint32     `protobuf:"varint,8,opt,name=seat_count,json=seatCount,proto3" json:"seat_count,omitempty"`
}

func (x *ShowtimeDetail) Reset() {
	*x = ShowtimeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowtimeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowtimeDetail) ProtoMessage() {}

func (x *ShowtimeDetail) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowtimeDetail.ProtoReflect.Descriptor instead.
func (*ShowtimeDetail) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{73}
}

func (x *ShowtimeDetail) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShowtimeDetail) GetTheaterName() string {
	if x != nil {
		return x.TheaterName
	}
	return ""
}

func (x *ShowtimeDetail) GetMovieName() string {
	if x != nil {
		return x.MovieName
	}
	return ""
}

func (x *ShowtimeDetail) GetMovieType() *MovieType {
	if x != nil {
		return x.MovieType
	}
	return nil
}

func (x *ShowtimeDetail) GetScreenName() string {
	if x != nil {
		return x.ScreenName
	}
	return ""
}

func (x *ShowtimeDetail) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *ShowtimeDetail) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *ShowtimeDetail) GetSeatCount() uint32 {
	if x != nil {
		return x.SeatCount
	}
	return 0
}

type GetShowtimeListOfTheaterByMovieIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater               *Theater          `protobuf:"bytes,1,opt,name=theater,proto3" json:"theater,omitempty"`
	ShowtimeListOfTheater []*ShowtimeDetail `protobuf:"bytes,2,rep,name=showtime_list_of_theater,json=showtimeListOfTheater,proto3" json:"showtime_list_of_theater,omitempty"`
}

func (x *GetShowtimeListOfTheaterByMovieIdResponse) Reset() {
	*x = GetShowtimeListOfTheaterByMovieIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeListOfTheaterByMovieIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeListOfTheaterByMovieIdResponse) ProtoMessage() {}

func (x *GetShowtimeListOfTheaterByMovieIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeListOfTheaterByMovieIdResponse.ProtoReflect.Descriptor instead.
func (*GetShowtimeListOfTheaterByMovieIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{74}
}

func (x *GetShowtimeListOfTheaterByMovieIdResponse) GetTheater() *Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

func (x *GetShowtimeListOfTheaterByMovieIdResponse) GetShowtimeListOfTheater() []*ShowtimeDetail {
	if x != nil {
		return x.ShowtimeListOfTheater
	}
	return nil
}

type GetShowtimeListOfTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId   uint32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	RequestTime uint64 `protobuf:"varint,2,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
}

func (x *GetShowtimeListOfTheaterRequest) Reset() {
	*x = GetShowtimeListOfTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeListOfTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeListOfTheaterRequest) ProtoMessage() {}

func (x *GetShowtimeListOfTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeListOfTheaterRequest.ProtoReflect.Descriptor instead.
func (*GetShowtimeListOfTheaterRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{75}
}

func (x *GetShowtimeListOfTheaterRequest) GetTheaterId() uint32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *GetShowtimeListOfTheaterRequest) GetRequestTime() uint64 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

type GetShowtimeListOfTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater               *Theater          `protobuf:"bytes,1,opt,name=theater,proto3" json:"theater,omitempty"`
	ShowtimeListOfTheater []*ShowtimeDetail `protobuf:"bytes,2,rep,name=showtime_list_of_theater,json=showtimeListOfTheater,proto3" json:"showtime_list_of_theater,omitempty"`
}

func (x *GetShowtimeListOfTheaterResponse) Reset() {
	*x = GetShowtimeListOfTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeListOfTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeListOfTheaterResponse) ProtoMessage() {}

func (x *GetShowtimeListOfTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeListOfTheaterResponse.ProtoReflect.Descriptor instead.
func (*GetShowtimeListOfTheaterResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{76}
}

func (x *GetShowtimeListOfTheaterResponse) GetTheater() *Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

func (x *GetShowtimeListOfTheaterResponse) GetShowtimeListOfTheater() []*ShowtimeDetail {
	if x != nil {
		return x.ShowtimeListOfTheater
	}
	return nil
}

type GetPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowtimeId uint32 `protobuf:"varint,1,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
	SeatId     uint32 `protobuf:"varint,2,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
}

func (x *GetPriceRequest) Reset() {
	*x = GetPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceRequest) ProtoMessage() {}

func (x *GetPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceRequest.ProtoReflect.Descriptor instead.
func (*GetPriceRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{77}
}

func (x *GetPriceRequest) GetShowtimeId() uint32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

func (x *GetPriceRequest) GetSeatId() uint32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OfMovieTypeId            uint32 `protobuf:"varint,2,opt,name=of_movie_type_id,json=ofMovieTypeId,proto3" json:"of_movie_type_id,omitempty"`
	OfSeatTypeId             uint32 `protobuf:"varint,3,opt,name=of_seat_type_id,json=ofSeatTypeId,proto3" json:"of_seat_type_id,omitempty"`
	OfShowtimeSlotId         uint32 `protobuf:"varint,4,opt,name=of_showtime_slot_id,json=ofShowtimeSlotId,proto3" json:"of_showtime_slot_id,omitempty"`
	OfShowtimeDayOfTheWeekId uint32 `protobuf:"varint,5,opt,name=of_showtime_day_of_the_week_id,json=ofShowtimeDayOfTheWeekId,proto3" json:"of_showtime_day_of_the_week_id,omitempty"`
	Price                    uint64 `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{78}
}

func (x *Price) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Price) GetOfMovieTypeId() uint32 {
	if x != nil {
		return x.OfMovieTypeId
	}
	return 0
}

func (x *Price) GetOfSeatTypeId() uint32 {
	if x != nil {
		return x.OfSeatTypeId
	}
	return 0
}

func (x *Price) GetOfShowtimeSlotId() uint32 {
	if x != nil {
		return x.OfShowtimeSlotId
	}
	return 0
}

func (x *Price) GetOfShowtimeDayOfTheWeekId() uint32 {
	if x != nil {
		return x.OfShowtimeDayOfTheWeekId
	}
	return 0
}

func (x *Price) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price *Price `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *GetPriceResponse) Reset() {
	*x = GetPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceResponse) ProtoMessage() {}

func (x *GetPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceResponse.ProtoReflect.Descriptor instead.
func (*GetPriceResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{79}
}

func (x *GetPriceResponse) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

type SeatStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SeatStatus) Reset() {
	*x = SeatStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatStatus) ProtoMessage() {}

func (x *SeatStatus) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatStatus.ProtoReflect.Descriptor instead.
func (*SeatStatus) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{80}
}

type SeatMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SeatType   *SeatType         `protobuf:"bytes,2,opt,name=seat_type,json=seatType,proto3" json:"seat_type,omitempty"`
	OfScreenId uint32            `protobuf:"varint,3,opt,name=of_screen_id,json=ofScreenId,proto3" json:"of_screen_id,omitempty"`
	Column     uint32            `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"`
	Row        string            `protobuf:"bytes,5,opt,name=row,proto3" json:"row,omitempty"`
	No         string            `protobuf:"bytes,6,opt,name=no,proto3" json:"no,omitempty"`
	Status     SeatStatus_Values `protobuf:"varint,7,opt,name=status,proto3,enum=movie_service.SeatStatus_Values" json:"status,omitempty"`
	Price      uint64            `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *SeatMetadata) Reset() {
	*x = SeatMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatMetadata) ProtoMessage() {}

func (x *SeatMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatMetadata.ProtoReflect.Descriptor instead.
func (*SeatMetadata) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{81}
}

func (x *SeatMetadata) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeatMetadata) GetSeatType() *SeatType {
	if x != nil {
		return x.SeatType
	}
	return nil
}

func (x *SeatMetadata) GetOfScreenId() uint32 {
	if x != nil {
		return x.OfScreenId
	}
	return 0
}

func (x *SeatMetadata) GetColumn() uint32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *SeatMetadata) GetRow() string {
	if x != nil {
		return x.Row
	}
	return ""
}

func (x *SeatMetadata) GetNo() string {
	if x != nil {
		return x.No
	}
	return ""
}

func (x *SeatMetadata) GetStatus() SeatStatus_Values {
	if x != nil {
		return x.Status
	}
	return SeatStatus_AVAILABLE
}

func (x *SeatMetadata) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type ShowtimeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater  *Theater        `protobuf:"bytes,1,opt,name=theater,proto3" json:"theater,omitempty"`
	Showtime *Showtime       `protobuf:"bytes,2,opt,name=showtime,proto3" json:"showtime,omitempty"`
	Movie    *Movie          `protobuf:"bytes,3,opt,name=movie,proto3" json:"movie,omitempty"`
	Screen   *Screen         `protobuf:"bytes,4,opt,name=screen,proto3" json:"screen,omitempty"`
	Seats    []*SeatMetadata `protobuf:"bytes,5,rep,name=seats,proto3" json:"seats,omitempty"`
}

func (x *ShowtimeMetadata) Reset() {
	*x = ShowtimeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowtimeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowtimeMetadata) ProtoMessage() {}

func (x *ShowtimeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowtimeMetadata.ProtoReflect.Descriptor instead.
func (*ShowtimeMetadata) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{82}
}

func (x *ShowtimeMetadata) GetTheater() *Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

func (x *ShowtimeMetadata) GetShowtime() *Showtime {
	if x != nil {
		return x.Showtime
	}
	return nil
}

func (x *ShowtimeMetadata) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

func (x *ShowtimeMetadata) GetScreen() *Screen {
	if x != nil {
		return x.Screen
	}
	return nil
}

func (x *ShowtimeMetadata) GetSeats() []*SeatMetadata {
	if x != nil {
		return x.Seats
	}
	return nil
}

type GetShowtimeMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowtimeId uint32 `protobuf:"varint,1,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
}

func (x *GetShowtimeMetadataRequest) Reset() {
	*x = GetShowtimeMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeMetadataRequest) ProtoMessage() {}

func (x *GetShowtimeMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetShowtimeMetadataRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{83}
}

func (x *GetShowtimeMetadataRequest) GetShowtimeId() uint32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

type GetShowtimeMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowtimeMetadata *ShowtimeMetadata `protobuf:"bytes,1,opt,name=showtime_metadata,json=showtimeMetadata,proto3" json:"showtime_metadata,omitempty"`
}

func (x *GetShowtimeMetadataResponse) Reset() {
	*x = GetShowtimeMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeMetadataResponse) ProtoMessage() {}

func (x *GetShowtimeMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetShowtimeMetadataResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{84}
}

func (x *GetShowtimeMetadataResponse) GetShowtimeMetadata() *ShowtimeMetadata {
	if x != nil {
		return x.ShowtimeMetadata
	}
	return nil
}

type SearchMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SearchMovieRequest) Reset() {
	*x = SearchMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMovieRequest) ProtoMessage() {}

func (x *SearchMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMovieRequest.ProtoReflect.Descriptor instead.
func (*SearchMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{85}
}

func (x *SearchMovieRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchMovieRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieList []*Movie `protobuf:"bytes,1,rep,name=movie_list,json=movieList,proto3" json:"movie_list,omitempty"`
}

func (x *SearchMovieResponse) Reset() {
	*x = SearchMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_service_movie_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMovieResponse) ProtoMessage() {}

func (x *SearchMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_service_movie_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMovieResponse.ProtoReflect.Descriptor instead.
func (*SearchMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_service_movie_service_proto_rawDescGZIP(), []int{86}
}

func (x *SearchMovieResponse) GetMovieList() []*Movie {
	if x != nil {
		return x.MovieList
	}
	return nil
}

var File_movie_service_movie_service_proto protoreflect.FileDescriptor

var file_movie_service_movie_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x3f, 0x0a, 0x0a, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x09, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x66, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0b, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x66, 0x5f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x58, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x66, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x79, 0x6f, 0x75, 0x74,
	0x75, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0xb2, 0x02, 0x0a, 0x05, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x35, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x49, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x79, 0x4f, 0x66,
	0x54, 0x68, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x0c, 0x53, 0x68,
	0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb5, 0x02,
	0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x66,
	0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x66,
	0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6f, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x68, 0x65, 0x5f,
	0x77, 0x65, 0x65, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x52,
	0x14, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x54, 0x68,
	0x65, 0x57, 0x65, 0x65, 0x6b, 0x22, 0x9a, 0x01, 0x0a, 0x07, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x6f,
	0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73,
	0x65, 0x61, 0x74, 0x4f, 0x66, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9b, 0x01,
	0x0a, 0x06, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x66, 0x5f, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0b,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x08, 0x53,
	0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x04, 0x53,
	0x65, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x66, 0x5f,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6f, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6e, 0x6f, 0x22, 0x3c, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x22, 0x4c, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72,
	0x65, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22,
	0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x66, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x51, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64,
	0x22, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0b, 0x6f, 0x66, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0c, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x22, 0x2d,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x22, 0x35, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x66, 0x5f, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f,
	0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x59, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c,
	0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x09, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xce, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb2, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x38, 0x0a,
	0x0a, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x09, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x51, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x59, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x4b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x53, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc5,
	0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29,
	0x0a, 0x11, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x4f,
	0x66, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x11, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x4f, 0x66,
	0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x32, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x53, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c,
	0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22, 0x2f,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x22,
	0x42, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x06, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x22, 0x61, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4f, 0x66, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x1d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4f, 0x66, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x4d, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x87, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x0e, 0x53, 0x68,
	0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xb5, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x12, 0x56, 0x0a, 0x18, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x15, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xac,
	0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x07, 0x74, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x18, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x15, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x22, 0x4b, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x6f, 0x66, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0f, 0x6f, 0x66, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6f, 0x66, 0x53, 0x65, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x6f, 0x66, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6f, 0x66, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x1e, 0x6f, 0x66, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x68, 0x65, 0x5f, 0x77, 0x65,
	0x65, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6f, 0x66, 0x53,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x57,
	0x65, 0x65, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x53,
	0x65, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x28, 0x0a, 0x06, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x22, 0x80, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x66,
	0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6f, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x07, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x52, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a,
	0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x31, 0x0a,
	0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73,
	0x22, 0x3d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22,
	0x6b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x11, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x12,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4a,
	0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52,
	0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x90, 0x15, 0x0a, 0x0c, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12,
	0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x26, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12,
	0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x83, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x68,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x65, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x4f, 0x66, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x2b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53,
	0x65, 0x61, 0x74, 0x4f, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x74,
	0x4f, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x64, 0x12, 0x37, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x77, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x9a, 0x01,
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x11, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0xa2, 0x02, 0x03, 0x4d,
	0x58, 0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0xca, 0x02, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0xe2, 0x02, 0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_movie_service_movie_service_proto_rawDescOnce sync.Once
	file_movie_service_movie_service_proto_rawDescData = file_movie_service_movie_service_proto_rawDesc
)

func file_movie_service_movie_service_proto_rawDescGZIP() []byte {
	file_movie_service_movie_service_proto_rawDescOnce.Do(func() {
		file_movie_service_movie_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_movie_service_movie_service_proto_rawDescData)
	})
	return file_movie_service_movie_service_proto_rawDescData
}

var file_movie_service_movie_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_movie_service_movie_service_proto_msgTypes = make([]protoimpl.MessageInfo, 87)
var file_movie_service_movie_service_proto_goTypes = []any{
	(SeatStatus_Values)(0),                            // 0: movie_service.SeatStatus.Values
	(*MovieGenre)(nil),                                // 1: movie_service.MovieGenre
	(*MovieType)(nil),                                 // 2: movie_service.MovieType
	(*MovieImage)(nil),                                // 3: movie_service.MovieImage
	(*MoviePoster)(nil),                               // 4: movie_service.MoviePoster
	(*MovieTrailer)(nil),                              // 5: movie_service.MovieTrailer
	(*Movie)(nil),                                     // 6: movie_service.Movie
	(*ShowtimeDayOfTheWeek)(nil),                      // 7: movie_service.ShowtimeDayOfTheWeek
	(*ShowtimeSlot)(nil),                              // 8: movie_service.ShowtimeSlot
	(*Showtime)(nil),                                  // 9: movie_service.Showtime
	(*Theater)(nil),                                   // 10: movie_service.Theater
	(*ScreenType)(nil),                                // 11: movie_service.ScreenType
	(*Screen)(nil),                                    // 12: movie_service.Screen
	(*SeatType)(nil),                                  // 13: movie_service.SeatType
	(*Seat)(nil),                                      // 14: movie_service.Seat
	(*CreateMovieGenreRequest)(nil),                   // 15: movie_service.CreateMovieGenreRequest
	(*CreateMovieGenreResponse)(nil),                  // 16: movie_service.CreateMovieGenreResponse
	(*UpdateMovieGenreRequest)(nil),                   // 17: movie_service.UpdateMovieGenreRequest
	(*UpdateMovieGenreResponse)(nil),                  // 18: movie_service.UpdateMovieGenreResponse
	(*DeleteMovieGenreRequest)(nil),                   // 19: movie_service.DeleteMovieGenreRequest
	(*DeleteMovieGenreResponse)(nil),                  // 20: movie_service.DeleteMovieGenreResponse
	(*GetShowtimeRequest)(nil),                        // 21: movie_service.GetShowtimeRequest
	(*GetShowtimeResponse)(nil),                       // 22: movie_service.GetShowtimeResponse
	(*CreateImageRequest)(nil),                        // 23: movie_service.CreateImageRequest
	(*CreateImageResponse)(nil),                       // 24: movie_service.CreateImageResponse
	(*GetImageRequest)(nil),                           // 25: movie_service.GetImageRequest
	(*GetImageResponse)(nil),                          // 26: movie_service.GetImageResponse
	(*DeleteImageRequest)(nil),                        // 27: movie_service.DeleteImageRequest
	(*DeleteImageResponse)(nil),                       // 28: movie_service.DeleteImageResponse
	(*CreatePosterRequest)(nil),                       // 29: movie_service.CreatePosterRequest
	(*CreatePosterResponse)(nil),                      // 30: movie_service.CreatePosterResponse
	(*GetPosterRequest)(nil),                          // 31: movie_service.GetPosterRequest
	(*GetPosterResponse)(nil),                         // 32: movie_service.GetPosterResponse
	(*DeletePosterRequest)(nil),                       // 33: movie_service.DeletePosterRequest
	(*DeletePosterResponse)(nil),                      // 34: movie_service.DeletePosterResponse
	(*PosterInfo)(nil),                                // 35: movie_service.PosterInfo
	(*ImageInfo)(nil),                                 // 36: movie_service.ImageInfo
	(*CreateMovieRequest)(nil),                        // 37: movie_service.CreateMovieRequest
	(*CreateMovieResponse)(nil),                       // 38: movie_service.CreateMovieResponse
	(*GetMovieRequest)(nil),                           // 39: movie_service.GetMovieRequest
	(*GetMovieResponse)(nil),                          // 40: movie_service.GetMovieResponse
	(*GetCurrentShowingMovieListRequest)(nil),         // 41: movie_service.GetCurrentShowingMovieListRequest
	(*GetCurrentShowingMovieListResponse)(nil),        // 42: movie_service.GetCurrentShowingMovieListResponse
	(*GetUpcomingMovieListRequest)(nil),               // 43: movie_service.GetUpcomingMovieListRequest
	(*GetUpcomingMovieListResponse)(nil),              // 44: movie_service.GetUpcomingMovieListResponse
	(*DeleteMovieRequest)(nil),                        // 45: movie_service.DeleteMovieRequest
	(*DeleteMovieResponse)(nil),                       // 46: movie_service.DeleteMovieResponse
	(*CreateScreenTypeRequest)(nil),                   // 47: movie_service.CreateScreenTypeRequest
	(*CreateScreenTypeResponse)(nil),                  // 48: movie_service.CreateScreenTypeResponse
	(*DeleteScreenTypeRequest)(nil),                   // 49: movie_service.DeleteScreenTypeRequest
	(*DeleteScreenTypeResponse)(nil),                  // 50: movie_service.DeleteScreenTypeResponse
	(*CreateTheaterRequest)(nil),                      // 51: movie_service.CreateTheaterRequest
	(*CreateTheaterResponse)(nil),                     // 52: movie_service.CreateTheaterResponse
	(*GetTheaterRequest)(nil),                         // 53: movie_service.GetTheaterRequest
	(*GetTheaterResponse)(nil),                        // 54: movie_service.GetTheaterResponse
	(*GetTheaterListRequest)(nil),                     // 55: movie_service.GetTheaterListRequest
	(*GetTheaterListResponse)(nil),                    // 56: movie_service.GetTheaterListResponse
	(*DeleteTheaterRequest)(nil),                      // 57: movie_service.DeleteTheaterRequest
	(*DeleteTheaterResponse)(nil),                     // 58: movie_service.DeleteTheaterResponse
	(*CreateScreenRequest)(nil),                       // 59: movie_service.CreateScreenRequest
	(*CreateScreenResponse)(nil),                      // 60: movie_service.CreateScreenResponse
	(*GetScreenRequest)(nil),                          // 61: movie_service.GetScreenRequest
	(*GetScreenResponse)(nil),                         // 62: movie_service.GetScreenResponse
	(*DeleteScreenRequest)(nil),                       // 63: movie_service.DeleteScreenRequest
	(*DeleteScreenResponse)(nil),                      // 64: movie_service.DeleteScreenResponse
	(*GetSeatRequest)(nil),                            // 65: movie_service.GetSeatRequest
	(*GetSeatResponse)(nil),                           // 66: movie_service.GetSeatResponse
	(*CreateAllSeatOfScreenRequest)(nil),              // 67: movie_service.CreateAllSeatOfScreenRequest
	(*CreateAllSeatOfScreenResponse)(nil),             // 68: movie_service.CreateAllSeatOfScreenResponse
	(*CreateShowtimeRequest)(nil),                     // 69: movie_service.CreateShowtimeRequest
	(*CreateShowtimeResponse)(nil),                    // 70: movie_service.CreateShowtimeResponse
	(*DeleteShowtimeRequest)(nil),                     // 71: movie_service.DeleteShowtimeRequest
	(*DeleteShowtimeResponse)(nil),                    // 72: movie_service.DeleteShowtimeResponse
	(*GetShowtimeListOfTheaterByMovieIdRequest)(nil),  // 73: movie_service.GetShowtimeListOfTheaterByMovieIdRequest
	(*ShowtimeDetail)(nil),                            // 74: movie_service.ShowtimeDetail
	(*GetShowtimeListOfTheaterByMovieIdResponse)(nil), // 75: movie_service.GetShowtimeListOfTheaterByMovieIdResponse
	(*GetShowtimeListOfTheaterRequest)(nil),           // 76: movie_service.GetShowtimeListOfTheaterRequest
	(*GetShowtimeListOfTheaterResponse)(nil),          // 77: movie_service.GetShowtimeListOfTheaterResponse
	(*GetPriceRequest)(nil),                           // 78: movie_service.GetPriceRequest
	(*Price)(nil),                                     // 79: movie_service.Price
	(*GetPriceResponse)(nil),                          // 80: movie_service.GetPriceResponse
	(*SeatStatus)(nil),                                // 81: movie_service.SeatStatus
	(*SeatMetadata)(nil),                              // 82: movie_service.SeatMetadata
	(*ShowtimeMetadata)(nil),                          // 83: movie_service.ShowtimeMetadata
	(*GetShowtimeMetadataRequest)(nil),                // 84: movie_service.GetShowtimeMetadataRequest
	(*GetShowtimeMetadataResponse)(nil),               // 85: movie_service.GetShowtimeMetadataResponse
	(*SearchMovieRequest)(nil),                        // 86: movie_service.SearchMovieRequest
	(*SearchMovieResponse)(nil),                       // 87: movie_service.SearchMovieResponse
}
var file_movie_service_movie_service_proto_depIdxs = []int32{
	4,  // 0: movie_service.Movie.poster:type_name -> movie_service.MoviePoster
	5,  // 1: movie_service.Movie.trailer:type_name -> movie_service.MovieTrailer
	2,  // 2: movie_service.Movie.movie_type:type_name -> movie_service.MovieType
	8,  // 3: movie_service.Showtime.showtime_slot:type_name -> movie_service.ShowtimeSlot
	7,  // 4: movie_service.Showtime.showtime_day_of_the_week:type_name -> movie_service.ShowtimeDayOfTheWeek
	11, // 5: movie_service.Screen.screen_type:type_name -> movie_service.ScreenType
	13, // 6: movie_service.Seat.seat_type:type_name -> movie_service.SeatType
	1,  // 7: movie_service.CreateMovieGenreResponse.movie_genre:type_name -> movie_service.MovieGenre
	1,  // 8: movie_service.UpdateMovieGenreResponse.movie_genre:type_name -> movie_service.MovieGenre
	9,  // 9: movie_service.GetShowtimeResponse.showtime:type_name -> movie_service.Showtime
	3,  // 10: movie_service.CreateImageResponse.movie_image:type_name -> movie_service.MovieImage
	3,  // 11: movie_service.GetImageResponse.movie_image_list:type_name -> movie_service.MovieImage
	4,  // 12: movie_service.CreatePosterResponse.movie_poster:type_name -> movie_service.MoviePoster
	4,  // 13: movie_service.GetPosterResponse.movie_poster:type_name -> movie_service.MoviePoster
	36, // 14: movie_service.CreateMovieRequest.image_list:type_name -> movie_service.ImageInfo
	35, // 15: movie_service.CreateMovieRequest.poster:type_name -> movie_service.PosterInfo
	6,  // 16: movie_service.CreateMovieResponse.movie:type_name -> movie_service.Movie
	6,  // 17: movie_service.GetMovieResponse.movie:type_name -> movie_service.Movie
	1,  // 18: movie_service.GetMovieResponse.genre_list:type_name -> movie_service.MovieGenre
	3,  // 19: movie_service.GetMovieResponse.image_list:type_name -> movie_service.MovieImage
	6,  // 20: movie_service.GetCurrentShowingMovieListResponse.movie_list:type_name -> movie_service.Movie
	6,  // 21: movie_service.GetUpcomingMovieListResponse.movie_list:type_name -> movie_service.Movie
	10, // 22: movie_service.GetTheaterResponse.theater:type_name -> movie_service.Theater
	10, // 23: movie_service.GetTheaterListResponse.theater_list:type_name -> movie_service.Theater
	12, // 24: movie_service.CreateScreenResponse.screen:type_name -> movie_service.Screen
	12, // 25: movie_service.GetScreenResponse.screen:type_name -> movie_service.Screen
	14, // 26: movie_service.GetSeatResponse.seat:type_name -> movie_service.Seat
	9,  // 27: movie_service.CreateShowtimeResponse.showtime:type_name -> movie_service.Showtime
	2,  // 28: movie_service.ShowtimeDetail.movie_type:type_name -> movie_service.MovieType
	10, // 29: movie_service.GetShowtimeListOfTheaterByMovieIdResponse.theater:type_name -> movie_service.Theater
	74, // 30: movie_service.GetShowtimeListOfTheaterByMovieIdResponse.showtime_list_of_theater:type_name -> movie_service.ShowtimeDetail
	10, // 31: movie_service.GetShowtimeListOfTheaterResponse.theater:type_name -> movie_service.Theater
	74, // 32: movie_service.GetShowtimeListOfTheaterResponse.showtime_list_of_theater:type_name -> movie_service.ShowtimeDetail
	79, // 33: movie_service.GetPriceResponse.price:type_name -> movie_service.Price
	13, // 34: movie_service.SeatMetadata.seat_type:type_name -> movie_service.SeatType
	0,  // 35: movie_service.SeatMetadata.status:type_name -> movie_service.SeatStatus.Values
	10, // 36: movie_service.ShowtimeMetadata.theater:type_name -> movie_service.Theater
	9,  // 37: movie_service.ShowtimeMetadata.showtime:type_name -> movie_service.Showtime
	6,  // 38: movie_service.ShowtimeMetadata.movie:type_name -> movie_service.Movie
	12, // 39: movie_service.ShowtimeMetadata.screen:type_name -> movie_service.Screen
	82, // 40: movie_service.ShowtimeMetadata.seats:type_name -> movie_service.SeatMetadata
	83, // 41: movie_service.GetShowtimeMetadataResponse.showtime_metadata:type_name -> movie_service.ShowtimeMetadata
	6,  // 42: movie_service.SearchMovieResponse.movie_list:type_name -> movie_service.Movie
	15, // 43: movie_service.MovieService.CreateMovieGenre:input_type -> movie_service.CreateMovieGenreRequest
	17, // 44: movie_service.MovieService.UpdateMovieGenre:input_type -> movie_service.UpdateMovieGenreRequest
	19, // 45: movie_service.MovieService.DeleteMovieGenre:input_type -> movie_service.DeleteMovieGenreRequest
	37, // 46: movie_service.MovieService.CreateMovie:input_type -> movie_service.CreateMovieRequest
	39, // 47: movie_service.MovieService.GetMovie:input_type -> movie_service.GetMovieRequest
	45, // 48: movie_service.MovieService.DeleteMovie:input_type -> movie_service.DeleteMovieRequest
	41, // 49: movie_service.MovieService.GetCurrentShowingMovieList:input_type -> movie_service.GetCurrentShowingMovieListRequest
	43, // 50: movie_service.MovieService.GetUpcomingMovieList:input_type -> movie_service.GetUpcomingMovieListRequest
	47, // 51: movie_service.MovieService.CreateScreenType:input_type -> movie_service.CreateScreenTypeRequest
	49, // 52: movie_service.MovieService.DeleteScreenType:input_type -> movie_service.DeleteScreenTypeRequest
	51, // 53: movie_service.MovieService.CreateTheater:input_type -> movie_service.CreateTheaterRequest
	53, // 54: movie_service.MovieService.GetTheater:input_type -> movie_service.GetTheaterRequest
	55, // 55: movie_service.MovieService.GetTheaterList:input_type -> movie_service.GetTheaterListRequest
	57, // 56: movie_service.MovieService.DeleteTheater:input_type -> movie_service.DeleteTheaterRequest
	59, // 57: movie_service.MovieService.CreateScreen:input_type -> movie_service.CreateScreenRequest
	61, // 58: movie_service.MovieService.GetScreen:input_type -> movie_service.GetScreenRequest
	63, // 59: movie_service.MovieService.DeleteScreen:input_type -> movie_service.DeleteScreenRequest
	65, // 60: movie_service.MovieService.GetSeat:input_type -> movie_service.GetSeatRequest
	67, // 61: movie_service.MovieService.CreateAllSeatOfScreen:input_type -> movie_service.CreateAllSeatOfScreenRequest
	69, // 62: movie_service.MovieService.CreateShowtime:input_type -> movie_service.CreateShowtimeRequest
	71, // 63: movie_service.MovieService.DeleteShowtime:input_type -> movie_service.DeleteShowtimeRequest
	21, // 64: movie_service.MovieService.GetShowtime:input_type -> movie_service.GetShowtimeRequest
	73, // 65: movie_service.MovieService.GetShowtimeListOfTheaterByMovieId:input_type -> movie_service.GetShowtimeListOfTheaterByMovieIdRequest
	76, // 66: movie_service.MovieService.GetShowtimeListOfTheater:input_type -> movie_service.GetShowtimeListOfTheaterRequest
	84, // 67: movie_service.MovieService.GetShowtimeMetadata:input_type -> movie_service.GetShowtimeMetadataRequest
	78, // 68: movie_service.MovieService.GetPrice:input_type -> movie_service.GetPriceRequest
	86, // 69: movie_service.MovieService.SearchMovie:input_type -> movie_service.SearchMovieRequest
	16, // 70: movie_service.MovieService.CreateMovieGenre:output_type -> movie_service.CreateMovieGenreResponse
	18, // 71: movie_service.MovieService.UpdateMovieGenre:output_type -> movie_service.UpdateMovieGenreResponse
	20, // 72: movie_service.MovieService.DeleteMovieGenre:output_type -> movie_service.DeleteMovieGenreResponse
	38, // 73: movie_service.MovieService.CreateMovie:output_type -> movie_service.CreateMovieResponse
	40, // 74: movie_service.MovieService.GetMovie:output_type -> movie_service.GetMovieResponse
	46, // 75: movie_service.MovieService.DeleteMovie:output_type -> movie_service.DeleteMovieResponse
	42, // 76: movie_service.MovieService.GetCurrentShowingMovieList:output_type -> movie_service.GetCurrentShowingMovieListResponse
	44, // 77: movie_service.MovieService.GetUpcomingMovieList:output_type -> movie_service.GetUpcomingMovieListResponse
	48, // 78: movie_service.MovieService.CreateScreenType:output_type -> movie_service.CreateScreenTypeResponse
	50, // 79: movie_service.MovieService.DeleteScreenType:output_type -> movie_service.DeleteScreenTypeResponse
	52, // 80: movie_service.MovieService.CreateTheater:output_type -> movie_service.CreateTheaterResponse
	54, // 81: movie_service.MovieService.GetTheater:output_type -> movie_service.GetTheaterResponse
	56, // 82: movie_service.MovieService.GetTheaterList:output_type -> movie_service.GetTheaterListResponse
	58, // 83: movie_service.MovieService.DeleteTheater:output_type -> movie_service.DeleteTheaterResponse
	60, // 84: movie_service.MovieService.CreateScreen:output_type -> movie_service.CreateScreenResponse
	62, // 85: movie_service.MovieService.GetScreen:output_type -> movie_service.GetScreenResponse
	64, // 86: movie_service.MovieService.DeleteScreen:output_type -> movie_service.DeleteScreenResponse
	66, // 87: movie_service.MovieService.GetSeat:output_type -> movie_service.GetSeatResponse
	68, // 88: movie_service.MovieService.CreateAllSeatOfScreen:output_type -> movie_service.CreateAllSeatOfScreenResponse
	70, // 89: movie_service.MovieService.CreateShowtime:output_type -> movie_service.CreateShowtimeResponse
	72, // 90: movie_service.MovieService.DeleteShowtime:output_type -> movie_service.DeleteShowtimeResponse
	22, // 91: movie_service.MovieService.GetShowtime:output_type -> movie_service.GetShowtimeResponse
	75, // 92: movie_service.MovieService.GetShowtimeListOfTheaterByMovieId:output_type -> movie_service.GetShowtimeListOfTheaterByMovieIdResponse
	77, // 93: movie_service.MovieService.GetShowtimeListOfTheater:output_type -> movie_service.GetShowtimeListOfTheaterResponse
	85, // 94: movie_service.MovieService.GetShowtimeMetadata:output_type -> movie_service.GetShowtimeMetadataResponse
	80, // 95: movie_service.MovieService.GetPrice:output_type -> movie_service.GetPriceResponse
	87, // 96: movie_service.MovieService.SearchMovie:output_type -> movie_service.SearchMovieResponse
	70, // [70:97] is the sub-list for method output_type
	43, // [43:70] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_movie_service_movie_service_proto_init() }
func file_movie_service_movie_service_proto_init() {
	if File_movie_service_movie_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_movie_service_movie_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MovieGenre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MovieType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MovieImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MoviePoster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MovieTrailer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ShowtimeDayOfTheWeek); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ShowtimeSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Showtime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Theater); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ScreenType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Screen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SeatType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Seat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMovieGenreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMovieGenreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMovieGenreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMovieGenreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieGenreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieGenreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CreateImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CreateImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GetPosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GetPosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*PosterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GetCurrentShowingMovieListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetCurrentShowingMovieListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GetUpcomingMovieListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GetUpcomingMovieListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CreateScreenTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CreateScreenTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*CreateScreenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*CreateScreenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAllSeatOfScreenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAllSeatOfScreenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*CreateShowtimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*CreateShowtimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteShowtimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteShowtimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeListOfTheaterByMovieIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*ShowtimeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeListOfTheaterByMovieIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeListOfTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeListOfTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*GetPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*GetPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*SeatStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*SeatMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*ShowtimeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*SearchMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_service_movie_service_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*SearchMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_movie_service_movie_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   87,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_movie_service_movie_service_proto_goTypes,
		DependencyIndexes: file_movie_service_movie_service_proto_depIdxs,
		EnumInfos:         file_movie_service_movie_service_proto_enumTypes,
		MessageInfos:      file_movie_service_movie_service_proto_msgTypes,
	}.Build()
	File_movie_service_movie_service_proto = out.File
	file_movie_service_movie_service_proto_rawDesc = nil
	file_movie_service_movie_service_proto_goTypes = nil
	file_movie_service_movie_service_proto_depIdxs = nil
}
